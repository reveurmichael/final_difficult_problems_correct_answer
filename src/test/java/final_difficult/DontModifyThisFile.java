/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package final_difficult;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.FileWriter;
import java.io.PrintStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class DontModifyThisFile {
  private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
  private final PrintStream originalOut = System.out;

  public FinalExamDifficultCorrectAnswer dd = new FinalExamDifficultCorrectAnswer();
  public int ddd = dd.size;
  public Cell[][] dddd = dd.cells;

  public String getMovablePositions(){
    long v = 0;
    for(int i = 0; i < ddd; i ++)
      for(int j = 0; j < ddd; j ++){
        if(dddd[i][j].isMovable)
          v += (17 * (i % 13) + 19 * (j % 7));
        else
          v -= 4;
      }
    return String.valueOf(v);
  }

  public static String t1(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t2(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t3(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveLeft();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t4(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t5(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t6(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    d.dd.moveDown();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }



  public static String t7(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveLeft();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();

    System.out.println(s);
    return s;
  }


  public static String t8(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.setHeartCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public void grable(){
    String[] ss = new String[10];
    ss[0] = "96701039253845080";
    ss[1] = "94801035438644168";
    ss[2] = "96639221833770185522";
    ss[3] = "90008116767453695981";
    ss[4] = "9670103925384508047764472508047765080";
    ss[5] = "948010392101649670926892683864416844724776508053845080477644724168477644724776";
    ss[6] = "966392218337715761204592374245925998599862705522477440263481";
    ss[7] = "90009038900092289722995099509508883890669028872481548154536953695369598159816287504635493549855885588116767475327532";
    ss[8] = "90008116811676747073753270736358551553624507375753695369567559816287504635492393123212321232132812889281217-267-403-267-1764-1764-1764-1764-1764-1764-17648558767475327073635866476358536237572497310923421849";
    ss[9] = "90008596855887869280950899509508906641705063569053865690538650824778447441704474417042854210328038883280242616489461326946320-869-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-17648558859685588786928095089508906686248396862485868282771275518102755160594186224729312247657-499-1259-1259";

    int r = 0;
    int i = 3;
    if(ss[0].equalsIgnoreCase(t1())) r += i;
    if(ss[1].equalsIgnoreCase(t2())) r += i;
    if(ss[2].equalsIgnoreCase(t3())) r += i;
    if(ss[3].equalsIgnoreCase(t4())) r += i;
    if(ss[4].equalsIgnoreCase(t5())) r += i;
    if(ss[5].equalsIgnoreCase(t6())) r += i;
    if(ss[6].equalsIgnoreCase(t7())) r += i;
    if(ss[7].equalsIgnoreCase(t8())) r += i;
    if(ss[8].equalsIgnoreCase(t9())) r += i;
    if(ss[9].equalsIgnoreCase(t10())) r += i;
    String rrr = String.valueOf(r);
    try {
      BufferedWriter bw = new BufferedWriter(new FileWriter("grable/grable"));
      bw.write(rrr);
      bw.close();
    }
    catch (Exception e){}
  }

  public static String t9(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.setHeartCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static String t10(){
    DontModifyThisFile d = new DontModifyThisFile();
    String s = "";
    d.dd.createCells();
    d.dd.clear();
    d.dd.setHeartCells();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.setYouCells();
    d.dd.moveRight();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.setHeartCells();
    d.dd.moveRight();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveRight();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveRight();
    d.dd.moveLeft();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveDown();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    d.dd.moveUp();
    s += d.getMovablePositions();
    s += d.getMovablePositions();

    System.out.println(s);
    return s;
  }

  public static void main(String[] args){
    t8();
  }

  @Test
  public void ddddd(){
    String s = "96701039253845080";
    assertEquals(s, t1());
  }

  @Test
  public void dddddddddd(){
    String s = "94801035438644168";
    assertEquals(s, t2());
  }

  @Test
  public void ddddddddddddddd(){
    String s = "96639221833770185522";
    assertEquals(s, t3());
  }

  @Test
  public void dddddddddddddddddddd(){
    String s = "90008116767453695981";
    assertEquals(s, t4());
  }

  @Test
  public void ddddddddddddddddddddddddd(){
    String s = "9670103925384508047764472508047765080";
    assertEquals(s, t5());
  }

  @Test
  public void ddddddddddddddddddddddd(){
    String s = "948010392101649670926892683864416844724776508053845080477644724168477644724776";
    assertEquals(s, t6());
  }

  @Test
  public void dddddd(){
    String s = "966392218337715761204592374245925998599862705522477440263481";
    assertEquals(s, t7());
  }

  @Test
  public void ddddddddd(){
    String s = "90009038900092289722995099509508883890669028872481548154536953695369598159816287504635493549855885588116767475327532";
    assertEquals(s, t8());
  }

  @Test
  public void dddddddddddd(){
    String s = "90008116811676747073753270736358551553624507375753695369567559816287504635492393123212321232132812889281217-267-403-267-1764-1764-1764-1764-1764-1764-17648558767475327073635866476358536237572497310923421849";
    assertEquals(s, t9());
  }

  @Test
  public void dddddddddddddddddd(){
    String s = "90008596855887869280950899509508906641705063569053865690538650824778447441704474417042854210328038883280242616489461326946320-869-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-1764-17648558859685588786928095089508906686248396862485868282771275518102755160594186224729312247657-499-1259-1259";
    assertEquals(s, t10());
  }

  @Before
  public void setUpStreams() {
    System.setOut(new PrintStream(outContent));
  }

  @After
  public void restoreStreams() {
    grable();
    System.setOut(originalOut);
  }

}
